.table {
	--border-width: 1px;
	--cell-padding: 0.5rem;
	--border-color: #444;
	--border-radius: 0.25rem;
	--branch-radius: 0.5rem;
  --branch-width: 2px;
  --branch-border: var(--branch-width) solid #888;
	--tree-element-width: 2rem;

	display: grid;
	grid-auto-flow: row dense;
  grid-auto-rows: fit-content(2rem);
	gap: var(--border-width);
	flex: 1 1 0;
	align-self: stretch;
	overflow: auto;
	max-height: 100%;
	max-width: 100%;
	min-height: 0;
	min-width: 0;
	position: relative;
	/* it's nice to always have border around the whole table
	it looks better when scrolling */
	border: var(--border-width) solid var(--border-color);

	&.withHeaders {
		border-radius: var(--border-radius) var(--border-radius) 0 0;
	}

	tbody {
		overflow: auto;
	}

	.tableCell, .tableHeader {
		outline: var(--border-width) solid var(--border-color);
		padding: var(--cell-padding);
		display: flex;
		flex-direction: row;
		align-items: stretch;
		justify-content: flex-start;
	}

	.tableCell {
		background-color: #222;
		border-top: 0;
	}

	.tableHeader {
		position: sticky;
		background-color: #333;
		top: 0; /* that's for position:sticky to work */
	}

}

.tableInfiniteScrollRow {
	position: relative;
	--trigger-height: 2rem;
	height: var(--trigger-height);
	grid-column: 1 / -1;

	.tableInifiniteScrollTrigger {
		position: absolute;
		bottom: 0;
		left: 0;
		right: 0;
		display: flex;
		flex-direction: column;
		align-items: center;
		justify-content: flex-end;
		height: calc(var(--trigger-height) + var(--trigger-offset));

		/* this element will overlay over other rows, and it shouldn't prevent interactions */
		background-color: transparent;
		pointer-events: none;
	}
}

.treeControls {
	align-self: stretch;
	display: flex;
	flex-direction: row;
	align-items: stretch;
	justify-content: flex-start;
	flex: 0 0 0;
	margin: calc(var(--cell-padding) * -1) 0 calc(var(--cell-padding) * -1) calc(var(--cell-padding) * -1);

	&.isExpanded .expander {
		transform: rotate(90deg);
	}

	.expander {
		transition: transform 0.25s;
		transform-origin: calc(var(--tree-element-width) / 2) 50%;
		cursor: pointer;
	}

	.empty,
	.corner,
	.vertical,
	.split,
	.horisontal,
	.expander {
		width: var(--tree-element-width);
		height: 100%;
		position: relative;
	}

	.empty,
	.corner,
	.vertical,
	.split,
	.horisontal {
		&::before,
		&::after {
			border: var(--branch-border);
			position: absolute;
		}
	}

	.split::before {
    content: "";
    top: 0;
    bottom: 0;
    left: 50%;
    border-width: 0 0 0 var(--branch-width);
  }

  .split::after {
    content: "";
    top: 0;
    bottom: 50%;
    left: 50%;
    right: -25%;
    border-width: 0 0 var(--branch-width) 0;
    border-radius: 0 0 0 var(--branch-radius);
  }

	.corner::before {
    content: "";
    top: -15%;
    bottom: 50%;
    left: 50%;
    right: -25%;
    border-width: 0 0 var(--branch-width) var(--branch-width);
    border-radius: 0 0 0 var(--branch-radius);
  }

	.vertical::before {
    content: "";
    top: 0;
    bottom: 0;
    left: 50%;
    border-width: 0 0 0 var(--branch-width);
	}

	.horisontal::before {
    content: "";
    bottom: 50%;
    left: 0;
    right: 0;
    border-width: 0 0 var(--branch-width) 0;
  }

}