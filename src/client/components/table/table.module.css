.table {
	overflow: auto;
	flex: 1 1 0;
	max-height: 100%;
	max-width: 100%;
	position: relative;

	--header-border-radius: 0.25rem;
	--header-border-width: 2px;
	--table-border-width: 1px;
	--cell-border-width: 1px;
	--border-color: #444;

	/* it's nice to always have border around the whole table
	it looks better when scrolling */
	border: var(--table-border-width) solid var(--border-color);

	&.withHeaders {
		/* actual border radius is set on th
		here it is only required to avoid parts of table clipping through */
		--table-border-radius: calc(var(--header-border-radius) + var(--table-border-width));
		border-radius: var(--table-border-radius) var(--table-border-radius) 0 0;
	}

	table {
		table-layout: fixed;
		width: 100%;

		/* we do borders like this for border-radius, which doesn't really work with non-default border-collapse */
		border-collapse: separate;
		border-spacing: 0;
	}

	tbody {
		overflow: auto;
	}

	td, th {
		padding: 0.5rem;
	}

	td {
		border: var(--cell-border-width) solid var(--border-color);
		background-color: #222;
		border-top: 0;
	}

	td:not(:first-child){ border-left-width: 0 }
	td:first-child { border-left-width: calc(var(--cell-border-width) - var(--table-border-width)) }
	td:last-child { border-right-width: calc(var(--cell-border-width) - var(--table-border-width)) }

	th {
		position: sticky;
		background-color: #333;
		top: 0; /* that's for position:sticky to work */
		border: var(--header-border-width) solid var(--border-color);
	}

	th:not(:first-child) { border-left-width: 0 }
	th:first-child { 
		border-top-left-radius: var(--header-border-radius);
		border-left-width: calc(var(--header-border-width) - var(--table-border-width));
	}
	th:last-child { 
		border-top-right-radius: var(--header-border-radius);
		border-right-width: calc(var(--header-border-width) - var(--table-border-width))
	}

}

.tableInfiniteScrollRow {
	position: relative;
	--trigger-height: 2rem;
	height: var(--trigger-height);

	.tableInifiniteScrollTrigger {
		column-span: all;
		display: block;
		position: absolute;
		bottom: 0;
		left: 0;
		right: 0;
		display: flex;
		flex-direction: column;
		align-items: center;
		justify-content: flex-end;
		height: calc(var(--trigger-height) + var(--trigger-offset));

		/* this element will overlay over other rows, and it shouldn't prevent interactions */
		background-color: transparent;
		pointer-events: none;
	}
}